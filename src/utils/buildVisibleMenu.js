/**
 * H√†m ƒë·ªá quy ƒë·ªÉ x√¢y d·ª±ng c√¢y menu c√≥ th√™m log chi ti·∫øt ƒë·ªÉ debug.
 * @param {Array} menuItems - M·∫£ng c√°c m·ª•c menu g·ªëc.
 * @param {Object} ability - ƒê·ªëi t∆∞·ª£ng ability t·ª´ CASL.
 * @param {number} level - C·∫•p ƒë·ªô ƒë·ªá quy, d√πng ƒë·ªÉ th·ª•t l·ªÅ log cho d·ªÖ ƒë·ªçc.
 * @returns {Array} - M·∫£ng c√°c m·ª•c menu ƒë√£ ƒë∆∞·ª£c l·ªçc.
 */
export const buildVisibleMenu = (menuItems, ability, level = 0) => {
  const indent = '  '.repeat(level); // T·∫°o kho·∫£ng th·ª•t l·ªÅ cho log
  // console.log('ability la:',ability)
  // console.log(`${indent}%c‚ñ∂Ô∏è B·∫Øt ƒë·∫ßu x·ª≠ l√Ω menu c·∫•p ${level}`, 'color: #9E9E9E;', `(c√≥ ${menuItems.length} m·ª•c)`);

  if (!ability) {
    // console.log(`${indent}%c‚ùå L·ªñI: Kh√¥ng t√¨m th·∫•y ƒë·ªëi t∆∞·ª£ng 'ability'. D·ª´ng l·∫°i.`, 'color: red; font-weight: bold;');
    return [];
  }

  const visibleItems = menuItems.reduce((accumulator, item) => {
    // console.log(`${indent}  - ƒêang x·ª≠ l√Ω m·ª•c: %c${item.id}`, 'font-weight: bold; color: #1E88E5;');

    // --- Tr∆∞·ªùng h·ª£p 1: M·ª•c menu l√† m·ªôt item ƒë∆°n l·∫ª ---
    if (item.type === 'item') {
      const requiredPermission = `[${item.action}, ${item.subject}]`;
      const canAccess = ability.can(item.action, item.subject);

      if (canAccess) {
        // console.log(`${indent}    %c‚úÖ CHO PH√âP%c - Quy·ªÅn ${requiredPermission} h·ª£p l·ªá.`, 'color: green; font-weight: bold;', 'color: initial;');
      accumulator.push(item);
       }
      // // else {
      //   console.log(`${indent}    %c‚ùå T·ª™ CH·ªêI%c - Y√™u c·∫ßu quy·ªÅn ${requiredPermission} nh∆∞ng kh√¥ng c√≥.`, 'color: red; font-weight: bold;', 'color: initial;');
      // }
    }

    // --- Tr∆∞·ªùng h·ª£p 2: M·ª•c menu l√† m·ªôt nh√≥m (collapse/group) ---
    if ((item.type === 'collapse' || item.type === 'group') && item.children) {
      // console.log(`${indent}  %c‚Ü™Ô∏è M·ª•c l√† nh√≥m, b·∫Øt ƒë·∫ßu x·ª≠ l√Ω c√°c m·ª•c con...`, 'color: #8E44AD;');
      
      // ƒê·ªá quy ƒë·ªÉ x·ª≠ l√Ω c√°c m·ª•c con
      const visibleChildren = buildVisibleMenu(item.children, ability, level + 1);

      //ch·ªâ gi·ªØ l·∫°i nh√≥m cha n·∫øu n√≥ c√≤n √≠t nh·∫•t 1 con ƒë∆∞·ª£c hi·ªÉn th·ªã
      if (visibleChildren.length > 0) {
        // console.log(`${indent}  %cüëç GI·ªÆ L·∫†I NH√ìM%c v√¨ c√≥ ${visibleChildren.length} m·ª•c con h·ª£p l·ªá.`, 'color: blue; font-weight: bold;', 'color: initial;');
        accumulator.push({ ...item, children: visibleChildren });
      } 
      // else {
      //   console.log(`${indent}  %cüóëÔ∏è LO·∫†I B·ªé NH√ìM%c v√¨ kh√¥ng c√≥ m·ª•c con n√†o h·ª£p l·ªá.`, 'color: #F39C12; font-weight: bold;', 'color: initial;');
      // }
    }

    return accumulator;
  }, []);

  // console.log(`${indent}%c‚óÄÔ∏è K·∫øt th√∫c x·ª≠ l√Ω menu c·∫•p ${level}`, 'color: #9E9E9E;', `=> Tr·∫£ v·ªÅ ${visibleItems.length} m·ª•c h·ª£p l·ªá.`);
  return visibleItems;
};