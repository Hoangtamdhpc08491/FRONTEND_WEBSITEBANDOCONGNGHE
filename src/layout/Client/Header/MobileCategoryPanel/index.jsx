// src/components/MobileCategoryPanel.jsx
import React, { useState, useEffect } from 'react';
import { ArrowLeft, ChevronDown, ChevronRight } from 'lucide-react';

const MobileCategoryPanel = ({ isOpen, onClose, categories = [] }) => { // categories ·ªü ƒë√¢y l√† c√¢y ƒë√£ x·ª≠ l√Ω t·ª´ buildCategoryTree
  const [selectedCategoryId, setSelectedCategoryId] = useState(null);
  const [expandedRightSections, setExpandedRightSections] = useState({});

  // useEffect n√†y s·∫Ω ch·∫°y khi panel m·ªü (isOpen) ho·∫∑c khi danh s√°ch categories thay ƒë·ªïi
  useEffect(() => {
    if (isOpen) {
      if (categories.length > 0) {
        // N·∫øu ch∆∞a c√≥ category n√†o ƒë∆∞·ª£c ch·ªçn (selectedCategoryId l√† null)
        // HO·∫∂C category ƒëang ch·ªçn kh√¥ng c√≤n t·ªìn t·∫°i trong danh s√°ch categories m·ªõi
        // th√¨ m·∫∑c ƒë·ªãnh ch·ªçn category ƒë·∫ßu ti√™n.
        const currentSelectionIsValid = categories.some(cat => cat.id === selectedCategoryId);
        if (selectedCategoryId === null || !currentSelectionIsValid) {
          setSelectedCategoryId(categories[0].id);
          setExpandedRightSections({}); // Reset tr·∫°ng th√°i x·ªï xu·ªëng c·ªßa c·ªôt ph·∫£i
        }
        // N·∫øu selectedCategoryId ƒë√£ c√≥ v√† h·ª£p l·ªá, kh√¥ng l√†m g√¨ c·∫£, gi·ªØ nguy√™n l·ª±a ch·ªçn.
        // Tr·∫°ng th√°i expandedRightSections c≈©ng ƒë∆∞·ª£c gi·ªØ nguy√™n tr·ª´ khi selectedCategoryId thay ƒë·ªïi.
      } else {
        // N·∫øu kh√¥ng c√≥ categories, reset h·∫øt
        setSelectedCategoryId(null);
        setExpandedRightSections({});
      }
    } else {
      // Khi panel ƒë√≥ng, reset selectedCategoryId ƒë·ªÉ l·∫ßn m·ªü sau s·∫Ω ch·ªçn l·∫°i m·ª•c ƒë·∫ßu ti√™n.
      // expandedRightSections c≈©ng ƒë∆∞·ª£c reset.
      // B·∫°n c√≥ th·ªÉ c√¢n nh·∫Øc gi·ªØ l·∫°i selectedCategoryId n·∫øu mu·ªën ng∆∞·ªùi d√πng quay l·∫°i ƒë√∫ng m·ª•c ƒë√£ ch·ªçn tr∆∞·ªõc ƒë√≥ khi m·ªü l·∫°i panel ngay.
      // Tuy nhi√™n, reset ho√†n to√†n th∆∞·ªùng cho tr·∫£i nghi·ªám "s·∫°ch" h∆°n khi m·ªü l·∫°i t·ª´ ƒë·∫ßu.
      setSelectedCategoryId(null);
      setExpandedRightSections({});
    }
  }, [isOpen, categories]); // Ch·ªâ ph·ª• thu·ªôc v√†o isOpen v√† categories


  // T√¨m d·ªØ li·ªáu c·ªßa danh m·ª•c ƒëang ƒë∆∞·ª£c ch·ªçn ·ªü c·ªôt tr√°i
  const selectedCategoryData = selectedCategoryId
    ? categories.find(cat => cat.id === selectedCategoryId)
    : null;

  // H√†m x·ª≠ l√Ω khi ch·ªçn m·ªôt m·ª•c ·ªü c·ªôt tr√°i
  const handleSelectCategory = (categoryId) => {
    // Ch·ªâ c·∫≠p nh·∫≠t n·∫øu ch·ªçn m·ªôt category KH√ÅC category hi·ªán t·∫°i
    if (selectedCategoryId !== categoryId) {
      setSelectedCategoryId(categoryId);
      setExpandedRightSections({}); // Reset (ƒë√≥ng) t·∫•t c·∫£ c√°c section con ·ªü c·ªôt ph·∫£i
    }
  };

  // H√†m x·ª≠ l√Ω m·ªü/ƒë√≥ng m·ªôt section ·ªü c·ªôt ph·∫£i
  const toggleRightSectionExpansion = (sectionTitle) => {
    setExpandedRightSections(prev => ({
      // ...prev, // Gi·ªØ l·∫°i tr·∫°ng th√°i c·ªßa c√°c section kh√°c n·∫øu mu·ªën
      // Ho·∫∑c ch·ªâ cho ph√©p m·ªôt section m·ªü t·∫°i m·ªôt th·ªùi ƒëi·ªÉm:
      // {[sectionTitle]: !prev[sectionTitle]}
      // Hi·ªán t·∫°i: cho ph√©p nhi·ªÅu section m·ªü c√πng l√∫c
      [sectionTitle]: !prev[sectionTitle]
    }));
  };

  // Kh√¥ng render g√¨ n·∫øu panel kh√¥ng m·ªü
  // Vi·ªác n√†y c≈©ng gi√∫p tr√°nh l·ªói n·∫øu categories ch∆∞a k·ªãp t·∫£i khi isOpen=true
  if (!isOpen) {
    return null;
  }

  return (
    <div
      className={`fixed inset-y-0 left-0 w-full sm:w-4/5 sm:max-w-xs h-full bg-gray-100 shadow-xl z-50 transform transition-transform duration-300 ease-in-out flex flex-col ${
        isOpen ? 'translate-x-0' : '-translate-x-full'
      }`}
      aria-modal="true" // Accessibility
      role="dialog"
    >
      {/* Header c·ªßa Panel */}
      <div className="flex items-center justify-between p-3 bg-red-600 text-white sticky top-0 z-10 flex-shrink-0 shadow">
        <button
          type="button"
          onClick={onClose}
          className="p-1 rounded-full hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-white/50"
          aria-label="ƒê√≥ng danh m·ª•c"
        >
           <ArrowLeft size={24} />
        </button>
        <h2 className="text-base font-semibold mx-2" id="mobile-category-panel-title">Danh M·ª•c S·∫£n Ph·∫©m</h2>
        <span className="w-8 h-8"></span> {/* Placeholder ƒë·ªÉ cƒÉn gi·ªØa ti√™u ƒë·ªÅ */}
      </div>

      {/* Body c·ªßa Panel - Chia 2 c·ªôt */}
      <div className="flex flex-grow overflow-hidden" role="navigation" aria-labelledby="mobile-category-panel-title">

        {/* C·ªôt Tr√°i (Icon + T√™n Danh m·ª•c ch√≠nh - L1) */}
        <nav className="w-[88px] flex-shrink-0 bg-gray-50 overflow-y-auto scrollbar-hidden border-r border-gray-200">
          {categories.length > 0 ? (
            <ul>
              {categories.map((categoryL1) => (
                <li key={categoryL1.id}>
                  <button
                    type="button"
                    onClick={() => handleSelectCategory(categoryL1.id)}
                    className={`w-full flex flex-col items-center justify-center p-1.5 py-2.5 text-center cursor-pointer transition-colors h-[76px] border-b border-gray-200 last:border-b-0 focus:outline-none focus:ring-2 focus:ring-red-300 focus:ring-inset ${
                      selectedCategoryId === categoryL1.id
                        ? 'bg-red-50 text-red-600 font-semibold relative before:absolute before:left-0 before:top-0 before:bottom-0 before:w-1 before:bg-red-600'
                        : 'text-gray-700 hover:bg-gray-100'
                    }`}
                    title={categoryL1.name}
                    aria-current={selectedCategoryId === categoryL1.id ? "page" : undefined}
                  >
                    <span className="text-xl mb-0.5">{categoryL1.icon || 'üìÑ'}</span>
                    <span className="text-[10px] leading-tight line-clamp-2">{categoryL1.name}</span>
                  </button>
                </li>
              ))}
            </ul>
          ) : (
            <p className="p-4 text-xs text-gray-500 text-center">Kh√¥ng c√≥ danh m·ª•c.</p>
          )}
        </nav>

        {/* C·ªôt Ph·∫£i (Chi ti·∫øt danh m·ª•c con - L2 l√†m section, L3 l√†m link) */}
        <div className="flex-grow bg-white overflow-y-auto scrollbar-hidden p-1">
          {/* Tr∆∞·ªùng h·ª£p ƒëang ƒë·ª£i selectedCategoryId ƒë∆∞·ª£c thi·∫øt l·∫≠p ho·∫∑c kh√¥ng c√≥ categories */}
          {!selectedCategoryId && categories.length > 0 && (
             <div className="p-4 text-center text-gray-400 text-sm h-full flex items-center justify-center">ƒêang t·∫£i...</div>
          )}

          {/* Tr∆∞·ªùng h·ª£p ƒë√£ ch·ªçn category cha v√† c√≥ d·ªØ li·ªáu con (L2) */}
          {selectedCategoryData && selectedCategoryData.children && selectedCategoryData.children.length > 0 && (
            <div>
              {selectedCategoryData.children.map((categoryL2) => { // categoryL2 l√† con c·ªßa selectedCategoryData
                const sectionTitle = categoryL2.name; // D√πng name l√†m key cho expanded state n·∫øu ID kh√¥ng ph·∫£i l√∫c n√†o c≈©ng c√≥ ho·∫∑c tr√πng
                const isSectionExpanded = !!expandedRightSections[sectionTitle];
                const hasSubLinks = categoryL2.children && categoryL2.children.length > 0; // categoryL3

                return (
                  <div key={categoryL2.id} className="border-b border-gray-100 last:border-b-0">
                    <button
                      type="button"
                      className="w-full flex items-center justify-between px-3 py-3.5 text-sm font-semibold text-gray-800 hover:bg-gray-50 text-left focus:outline-none focus:ring-1 focus:ring-red-300 focus:ring-inset"
                      onClick={hasSubLinks ? () => toggleRightSectionExpansion(sectionTitle) : () => {
                          // N·∫øu categoryL2 kh√¥ng c√≥ con (hasSubLinks=false), th√¨ khi nh·∫•n v√†o n√≥ s·∫Ω ƒë√≥ng panel
                          // v√† c√≥ th·ªÉ th·ª±c hi·ªán ƒëi·ªÅu h∆∞·ªõng (v√≠ d·ª•: ƒë·∫øn trang c·ªßa categoryL2)
                          // if (categoryL2.slug) { /* history.push(`/${categoryL2.slug}`) ho·∫∑c window.location.href */ }
                          onClose();
                      }}
                      aria-expanded={hasSubLinks ? isSectionExpanded : undefined}
                      aria-controls={hasSubLinks ? `section-content-${categoryL2.id}` : undefined}
                    >
                      <span className="truncate">{sectionTitle}</span>
                      {hasSubLinks && (
                          isSectionExpanded ? <ChevronDown size={18} className="text-gray-500 flex-shrink-0" /> : <ChevronRight size={18} className="text-gray-400 flex-shrink-0" />
                      )}
                      {!hasSubLinks && <ChevronRight size={18} className="text-gray-400 flex-shrink-0" />}
                    </button>

                    {/* Danh s√°ch c√°c link con (categoryL3) */}
                    {hasSubLinks && isSectionExpanded && (
                      <div className="pb-2 pl-5 pr-2 pt-1 bg-white" id={`section-content-${categoryL2.id}`}>
                        <ul>
                          {categoryL2.children.map((categoryL3) => (
                            <li key={categoryL3.id} className="py-1.5">
                              <a
                                href={categoryL3.slug ? `#${categoryL3.slug}` : '#'} // Thay b·∫±ng link th·∫≠t
                                onClick={onClose} // ƒê√≥ng panel khi ch·ªçn
                                className="flex items-center justify-between text-xs group text-gray-600 hover:text-red-600 hover:underline"
                              >
                                <span className="truncate">{categoryL3.name}</span>
                                {/* <ChevronRight size={14} className="text-gray-300 group-hover:text-red-500 flex-shrink-0"/> */}
                              </a>
                            </li>
                          ))}
                          {/* T√πy ch·ªçn: Link "Xem t·∫•t c·∫£" cho categoryL2 */}
                          {categoryL2.slug && (
                            <li className="py-1.5 mt-1">
                                  <a
                                    href={`#${categoryL2.slug}`} // Link ƒë·∫øn trang c·ªßa categoryL2
                                    onClick={onClose}
                                    className="text-xs text-blue-600 font-medium hover:text-red-600 hover:underline"
                                  >
                                      Xem t·∫•t c·∫£ {categoryL2.name}
                                  </a>
                              </li>
                          )}
                        </ul>
                      </div>
                    )}
                  </div>
                );
              })}
            </div>
          )}

          {/* Tr∆∞·ªùng h·ª£p ƒë√£ ch·ªçn category cha nh∆∞ng kh√¥ng c√≥ con (L2) */}
          {selectedCategoryId && selectedCategoryData && (!selectedCategoryData.children || selectedCategoryData.children.length === 0) && (
             <div className="p-4 text-center text-gray-500 text-sm h-full flex items-center justify-center">
                Kh√¥ng c√≥ chi ti·∫øt cho danh m·ª•c n√†y.
             </div>
          )}

          {/* Tr∆∞·ªùng h·ª£p kh√¥ng c√≥ category n√†o ƒë∆∞·ª£c ch·ªçn (v√≠ d·ª•: categories r·ªóng) */}
           {isOpen && !selectedCategoryId && categories.length === 0 && (
             <div className="p-4 text-center text-gray-500 text-sm h-full flex items-center justify-center">
                Kh√¥ng c√≥ d·ªØ li·ªáu danh m·ª•c.
             </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default MobileCategoryPanel;